import time

from src.config import config
from src.db.utils import get_db_connection, get_session, approve_user
from src.engine import get_main_menu
from src.logger import logger
from telegram import Update
from telegram.ext import ContextTypes


async def button_approve_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–û–¥–æ–±—Ä–∏—Ç—å' –∞–¥–º–∏–Ω–æ–º."""
    query = update.callback_query
    await query.answer()
    admin_id = query.from_user.id

    if admin_id != config.ADMIN_TELEGRAM_ID:
        await query.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è.", show_alert=True)
        return

    data = query.data
    if data.startswith('approve_'):
        target_telegram_id = int(data.split('_')[1])
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT status FROM bot_users WHERE telegram_id = ?", (target_telegram_id,))
            row = cursor.fetchone()

        if not row:
             status_text = f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω."
             # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
             is_admin_logged_in = get_session(admin_id)[0] is not None and (time.time() - get_session(admin_id)[1]) < config.SESSION_TIMEOUT
             menu_markup = get_main_menu(is_logged_in=is_admin_logged_in, is_admin=True)
             await query.edit_message_text(text=status_text, reply_markup=menu_markup)
             return

        current_status = row[0]
        if current_status == 'active':
            status_text = f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_telegram_id} —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω."
        elif current_status in ['pending', 'banned']:
            approve_user(target_telegram_id)
            status_text = f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_telegram_id} –æ–¥–æ–±—Ä–µ–Ω —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É."
            try:
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ (–æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
                await context.bot.send_message(
                    chat_id=target_telegram_id,
                    text="üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –±–æ—Ç–∞.",
                    reply_markup=get_main_menu(is_logged_in=False) # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω
                )
            except Exception as e:
                 logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_telegram_id} –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É: {e}")
        else:
             status_text = f"‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–¥–æ–±—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º {current_status}."

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
        is_admin_logged_in = get_session(admin_id)[0] is not None and (time.time() - get_session(admin_id)[1]) < config.SESSION_TIMEOUT
        menu_markup = get_main_menu(is_logged_in=is_admin_logged_in, is_admin=True)
        await query.edit_message_text(text=status_text, reply_markup=menu_markup)